name: Build Desktop App

on:
    push:
        branches:
            - main
        tags:
            - '*'
    pull_request:
        branches:
            - main

jobs:
    build:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os:
                    - ubuntu-latest
                    - macos-latest
                    - windows-latest
                node_version:
                    - 15
                architecture:
                    - x64
                    #- aarch64
        name: Node ${{ matrix.node_version }} on ${{ matrix.os }} ${{ matrix.architecture }}
        steps:
            -   uses: actions/checkout@v2
            -   name: Setup node
                uses: actions/setup-node@v2
                with:
                    node-version: ${{ matrix.node_version }}
                    architecture: ${{ matrix.architecture }}
            -   name: Install yarn
                run: npm i -g yarn
            -   name: Install dependencies
                run: yarn install
            -   name: Build application
                run: yarn build
            -   name: Compress release (non-GarbageShell)
                run: zip -r "PDS-Viewer-${{ matrix.os }}-${{ matrix.architecture }}.zip" "./out/make"
                if: matrix.os != 'windows-latest'
            -   name: Compress release (GarbageShell)
                run: Compress-Archive "out/make" "PDS-Viewer-${{ matrix.os }}-${{ matrix.architecture }}.zip"
                if: matrix.os == 'windows-latest'
            -   name: Create release
                id: create_release
                if: startsWith(github.ref, 'refs/tags/v')
                uses: actions/create-release@v1
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                with:
                    tag_name: ${{ github.ref }}
                    release_name: ${{ github.ref }} ${{ matrix.os }}
                    draft: true
            -   name: Upload release asset
                if: startsWith(github.ref, 'refs/tags/v')
                uses: actions/upload-release-asset@v1
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                with:
                    upload_url: ${{ steps.create_release.outputs.upload_url }}
                    asset_path: ./PDS-Viewer-${{ matrix.os }}-${{ matrix.architecture }}.zip
                    asset_name: PDS-Viewer-${{ matrix.os }}-${{ matrix.architecture }}.zip
                    asset_content_type: application/zip
